ASP.NET
Active Server Pages
Фреймворк .NET призначений для веб-проєктів

Клієнт-серверна технологія
	це технологія, за якою в інформаційному обміні беруть участь две програми:
	клієнт - той, хто надсилає запит
	сервер - той, зто очікує, приймає та оброблює запит
	у даному сенсі клієнт та сервер - це ролі, що їх гра.ть програми.

Веб-проєкт:
a)
	Сервер (сховище)				    	Клієнт (браузер)
	 HTML + CSS + JS		 <---	      пише адресу у браузері
	    [file(s)]		     --->		файли приймаються і виконуються
б)
	Сервер (активний)					     Клієнт (браузер)
	 CS (Sharp)				 <---		  пише адресу у браузері
	 формує HTML			 --->		дані приймаються (і, можливо виконуються)

https://localhost:7047/ localhost - спеціальне ім'я, яке показує на данний ПК (петля)
Запит потрапляє до ASP - до маршрутизатора (визначеного у Program.cs)
    pattern: "{controller=Home}/{action=Index}/{id?}");
згідно з шаблоном, щапит розподіляється на 3 частини, відокремленні "/"
	controller / action / id
якщо якоїсь частини	немає, то береться значення за замовченням 
	базовий запит "/" -- controller = Home, action = Index, id = null

ASP формує ім'я контроллера з'єднуючи "Home" та "Controller" і шукає відповідний 
у каталозі "Controllers" - знаходить його, створює з нього об'єкт та намагається
запустити у ньому метод, який відповідає за назвою "action", тобто "Index"

Контроллер викликає View(), що означає перехід до представлення.
Воно шукається у каталозі Views|[controller]/[action].cshtml
тобто Views/Home/Index.cshtml
Якщо не знаходить, то намагається шукати к каталозі Shared 
тобто Views/Shared/Index.cshtml

Цуей файл "вставляється" до файлу-шаблону представлень
	Views/Shared_Layout.cshtml
у місце, в якому знахродиться команда
	@RenderBody()

________________________________________________________________

HTTP HyperText Transfer Protocol

Request / Response

Request:

PUT/Home/Index HTTP/1.1				\r\n			| method: GET,POST,PUT,PATCH,DELETE,  HEAD,OPTIONS,TRACE
Host: mysite.com					\r\n			| Заголовки по схемі
Connection: close					\r\n			| ключ: значення; атрибути
Accept: text/html; charset=utf-8	\r\n			| 
									\r\n			| кінець заголовків - порожній рядок
{"user":"239467923", "new-name":"Petrovich"}		| тіло - до кінця пакету (опціаналбно). Тіло заборонено для GET та HEAD


Response:

HTTP/1.1 202 Accepted								| 202 - статус-код
Connection: close									| Accepted - Reason Pharse
Content-Type: application/json						|
													|
{"server-time": 1876972345}							|


HTML Forms
методи: GET та POST
спосіб кодування даних (enctype)

  x-www-form-urlencoded: (за замовченням)
	ключ-значення ключ 2-значення 2&...
	дозволяється як GET, так і  POST. У запитах GET закодовані дані 
	додаються до URL після "?", у випадку POST у тіло

  multipart/form-data: тільки POST дозволяє передачу файлів
	Content-Type: text/plain
	Content-Disposition: form-field; nате ключ1

	значення1
	--delimiter-----------------
	Content-Type: image/jpeg
	Content-Disposition: form-file; name=file1.jpg

	JPEG11980hvuanw98y3w3urh; kjnavp9792t4rb;kjnv
	----delimiter----------------